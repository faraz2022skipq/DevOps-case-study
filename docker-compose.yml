services:
  # Nginx reverse proxy + static file server
  nginx:
    image: nginx:1.25-alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - backend
    restart: unless-stopped
    logging:
      driver: awslogs
      options:
        awslogs-group: "/aws/ec2/junior-devops-case-study/nginx"
        awslogs-region: "us-west-1"
        awslogs-stream: "nginx"

  # Django backend service running in a container
  backend:
    image: ${ECR_REPOSITORY_URL}:${IMAGE_TAG:-latest}
    environment:
      - DJANGO_SETTINGS_MODULE=backend.settings
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - DB_PORT=5432
      - AWS_REGION=${AWS_REGION}
      - SECRET_KEY=${DJANGO_SECRET_KEY}
    ports:
      - "8000:8000"
    restart: unless-stopped
    logging:
      driver: awslogs
      options:
        awslogs-group: "/aws/ec2/junior-devops-case-study/django"
        awslogs-region: "us-west-1"
        awslogs-stream: "django"
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8000/healthz')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

# Persistent volume for Nginx logs
volumes:
  nginx_logs:

# Custom network for app communication
networks:
  default:
    name: app-network
    driver: bridge
